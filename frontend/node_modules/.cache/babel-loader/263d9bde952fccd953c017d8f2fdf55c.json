{"ast":null,"code":"var _jsxFileName = \"/Users/kaualandi/dev/atendechat-novo-main/frontend/src/components/NotificationsPopOver/index.js\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { socketConnection } from \"../../services/socket\";\nimport useSound from \"use-sound\";\nimport Popover from \"@material-ui/core/Popover\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport TicketListItem from \"../TicketListItemCustom\";\nimport useTickets from \"../../hooks/useTickets\";\nimport alertSound from \"../../assets/sound.mp3\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\nconst useStyles = makeStyles(theme => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350,\n    ...theme.scrollbarStyles\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270\n    }\n  },\n  noShadow: {\n    boxShadow: \"none !important\"\n  }\n}));\nconst NotificationsPopOver = volume => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    user\n  } = useContext(AuthContext);\n  const ticketIdUrl = +history.location.pathname.split(\"/\")[2];\n  const ticketIdRef = useRef(ticketIdUrl);\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [showPendingTickets, setShowPendingTickets] = useState(false);\n  const [, setDesktopNotifications] = useState([]);\n  const {\n    tickets\n  } = useTickets({\n    withUnreadMessages: \"true\"\n  });\n  const [play] = useSound(alertSound, volume);\n  const soundAlertRef = useRef();\n  const historyRef = useRef(history);\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        if (user.allTicket === \"enable\") {\n          setShowPendingTickets(true);\n        }\n      } catch (err) {\n        toastError(err);\n      }\n    };\n    fetchSettings();\n  }, []);\n  useEffect(() => {\n    soundAlertRef.current = play;\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser doesn't support notifications\");\n    } else {\n      Notification.requestPermission();\n    }\n  }, [play]);\n  useEffect(() => {\n    const processNotifications = () => {\n      if (showPendingTickets) {\n        setNotifications(tickets);\n      } else {\n        const newNotifications = tickets.filter(ticket => ticket.status !== \"pending\");\n        setNotifications(newNotifications);\n      }\n    };\n    processNotifications();\n  }, [tickets]);\n  useEffect(() => {\n    ticketIdRef.current = ticketIdUrl;\n  }, [ticketIdUrl]);\n  useEffect(() => {\n    const socket = socketConnection({\n      companyId: user.companyId,\n      userId: user.id\n    });\n    socket.on(\"connect\", () => socket.emit(\"joinNotification\"));\n    socket.on(`company-${user.companyId}-ticket`, data => {\n      if (data.action === \"updateUnread\" || data.action === \"delete\") {\n        setNotifications(prevState => {\n          const ticketIndex = prevState.findIndex(t => t.id === data.ticketId);\n          if (ticketIndex !== -1) {\n            prevState.splice(ticketIndex, 1);\n            return [...prevState];\n          }\n          return prevState;\n        });\n        setDesktopNotifications(prevState => {\n          const notfiticationIndex = prevState.findIndex(n => n.tag === String(data.ticketId));\n          if (notfiticationIndex !== -1) {\n            prevState[notfiticationIndex].close();\n            prevState.splice(notfiticationIndex, 1);\n            return [...prevState];\n          }\n          return prevState;\n        });\n      }\n    });\n    socket.on(`company-${user.companyId}-appMessage`, data => {\n      var _user$queues;\n      if (data.action === \"create\" && !data.message.fromMe && data.ticket.status !== \"pending\" && (!data.message.read || data.ticket.status === \"pending\") && (data.ticket.userId === (user === null || user === void 0 ? void 0 : user.id) || !data.ticket.userId) && ((user === null || user === void 0 ? void 0 : (_user$queues = user.queues) === null || _user$queues === void 0 ? void 0 : _user$queues.some(queue => queue.id === data.ticket.queueId)) || !data.ticket.queueId)) {\n        setNotifications(prevState => {\n          const ticketIndex = prevState.findIndex(t => t.id === data.ticket.id);\n          if (ticketIndex !== -1) {\n            prevState[ticketIndex] = data.ticket;\n            return [...prevState];\n          }\n          return [data.ticket, ...prevState];\n        });\n        const shouldNotNotificate = data.message.ticketId === ticketIdRef.current && document.visibilityState === \"visible\" || data.ticket.userId && data.ticket.userId !== (user === null || user === void 0 ? void 0 : user.id) || data.ticket.isGroup;\n        if (shouldNotNotificate) return;\n        handleNotifications(data);\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [user, showPendingTickets]);\n  const handleNotifications = data => {\n    const {\n      message,\n      contact,\n      ticket\n    } = data;\n    const options = {\n      body: `${message.body} - ${format(new Date(), \"HH:mm\")}`,\n      icon: contact.urlPicture,\n      tag: ticket.id,\n      renotify: true\n    };\n    const notification = new Notification(`${i18n.t(\"tickets.notification.message\")} ${contact.name}`, options);\n    notification.onclick = e => {\n      e.preventDefault();\n      window.focus();\n      historyRef.current.push(`/tickets/${ticket.uuid}`);\n      // handleChangeTab(null, ticket.isGroup? \"group\" : \"open\");\n    };\n    setDesktopNotifications(prevState => {\n      const notfiticationIndex = prevState.findIndex(n => n.tag === notification.tag);\n      if (notfiticationIndex !== -1) {\n        prevState[notfiticationIndex] = notification;\n        return [...prevState];\n      }\n      return [notification, ...prevState];\n    });\n    soundAlertRef.current();\n  };\n  const handleClick = () => {\n    setIsOpen(prevState => !prevState);\n  };\n  const handleClickAway = () => {\n    setIsOpen(false);\n  };\n  const NotificationTicket = ({\n    children\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handleClickAway,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 10\n      }\n    }, children);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClick,\n    ref: anchorEl,\n    \"aria-label\": \"Open Notifications\",\n    color: \"inherit\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    overlap: \"rectangular\",\n    badgeContent: notifications.length,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ChatIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(Popover, {\n    disableScrollLock: true,\n    open: isOpen,\n    anchorEl: anchorEl.current,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"right\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    classes: {\n      paper: classes.popoverPaper\n    },\n    onClose: handleClickAway,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, notifications.length === 0 ? /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 8\n    }\n  }, i18n.t(\"notifications.noTickets\"))) : notifications.map(ticket => /*#__PURE__*/React.createElement(NotificationTicket, {\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TicketListItem, {\n    ticket: ticket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }))))));\n};\nexport default NotificationsPopOver;","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","useHistory","format","socketConnection","useSound","Popover","IconButton","List","ListItem","ListItemText","makeStyles","Badge","ChatIcon","TicketListItem","useTickets","alertSound","AuthContext","i18n","toastError","useStyles","theme","tabContainer","overflowY","maxHeight","scrollbarStyles","popoverPaper","width","maxWidth","marginLeft","spacing","marginRight","breakpoints","down","noShadow","boxShadow","NotificationsPopOver","volume","classes","history","user","ticketIdUrl","location","pathname","split","ticketIdRef","anchorEl","isOpen","setIsOpen","notifications","setNotifications","showPendingTickets","setShowPendingTickets","setDesktopNotifications","tickets","withUnreadMessages","play","soundAlertRef","historyRef","fetchSettings","allTicket","err","current","window","console","log","Notification","requestPermission","processNotifications","newNotifications","filter","ticket","status","socket","companyId","userId","id","on","emit","data","action","prevState","ticketIndex","findIndex","t","ticketId","splice","notfiticationIndex","n","tag","String","close","_user$queues","message","fromMe","read","queues","some","queue","queueId","shouldNotNotificate","document","visibilityState","isGroup","handleNotifications","disconnect","contact","options","body","Date","icon","urlPicture","renotify","notification","name","onclick","e","preventDefault","focus","push","uuid","handleClick","handleClickAway","NotificationTicket","children","createElement","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","ref","color","style","overlap","badgeContent","length","disableScrollLock","open","anchorOrigin","vertical","horizontal","transformOrigin","paper","onClose","dense","className","map","key"],"sources":["/Users/kaualandi/dev/atendechat-novo-main/frontend/src/components/NotificationsPopOver/index.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { socketConnection } from \"../../services/socket\";\n\nimport useSound from \"use-sound\";\n\nimport Popover from \"@material-ui/core/Popover\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nimport TicketListItem from \"../TicketListItemCustom\";\nimport useTickets from \"../../hooks/useTickets\";\nimport alertSound from \"../../assets/sound.mp3\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles(theme => ({\n\ttabContainer: {\n\t\toverflowY: \"auto\",\n\t\tmaxHeight: 350,\n\t\t...theme.scrollbarStyles,\n\t},\n\tpopoverPaper: {\n\t\twidth: \"100%\",\n\t\tmaxWidth: 350,\n\t\tmarginLeft: theme.spacing(2),\n\t\tmarginRight: theme.spacing(1),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tmaxWidth: 270,\n\t\t},\n\t},\n\tnoShadow: {\n\t\tboxShadow: \"none !important\",\n\t},\n}));\n\nconst NotificationsPopOver = (volume) => {\n\tconst classes = useStyles();\n\n\tconst history = useHistory();\n\tconst { user } = useContext(AuthContext);\n\tconst ticketIdUrl = +history.location.pathname.split(\"/\")[2];\n\tconst ticketIdRef = useRef(ticketIdUrl);\n\tconst anchorEl = useRef();\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [notifications, setNotifications] = useState([]);\n\n\tconst [showPendingTickets, setShowPendingTickets] = useState(false);\n\n\tconst [, setDesktopNotifications] = useState([]);\n\n\tconst { tickets } = useTickets({ withUnreadMessages: \"true\" });\n\n\tconst [play] = useSound(alertSound, volume);\n\tconst soundAlertRef = useRef();\n\n\tconst historyRef = useRef(history);\n\n\tuseEffect(() => {\n\t\tconst fetchSettings = async () => {\n\t\t\ttry {\n\n\t\t\t\tif (user.allTicket === \"enable\") {\n\t\t\t\t\tsetShowPendingTickets(true);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t  \ttoastError(err);\n\t\t\t}\n\t\t}\n\t  \n\t\tfetchSettings();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsoundAlertRef.current = play;\n\n\t\tif (!(\"Notification\" in window)) {\n\t\t\tconsole.log(\"This browser doesn't support notifications\");\n\t\t} else {\n\t\t\tNotification.requestPermission();\n\t\t}\n\t}, [play]);\n\n\tuseEffect(() => {\n\t\tconst processNotifications = () => {\n\t\t\tif (showPendingTickets) {\n\t\t\t\tsetNotifications(tickets);\n\t\t\t} else {\n\t\t\t\tconst newNotifications = tickets.filter(ticket => ticket.status !== \"pending\");\n\n\t\t\t\tsetNotifications(newNotifications);\n\t\t\t}\n\t\t}\n\n\t\tprocessNotifications();\n\t}, [tickets]);\n\n\tuseEffect(() => {\n\t\tticketIdRef.current = ticketIdUrl;\n\t}, [ticketIdUrl]);\n\n\tuseEffect(() => {\n\t\tconst socket = socketConnection({companyId: user.companyId, userId: user.id});\n\t\tsocket.on(\"connect\", () => socket.emit(\"joinNotification\"));\n\n\t\tsocket.on(`company-${user.companyId}-ticket`, data => {\n\t\t\tif (data.action === \"updateUnread\" || data.action === \"delete\") {\n\t\t\t\tsetNotifications(prevState => {\n\t\t\t\t\tconst ticketIndex = prevState.findIndex(t => t.id === data.ticketId);\n\t\t\t\t\tif (ticketIndex !== -1) {\n\t\t\t\t\t\tprevState.splice(ticketIndex, 1);\n\t\t\t\t\t\treturn [...prevState];\n\t\t\t\t\t}\n\t\t\t\t\treturn prevState;\n\t\t\t\t});\n\n\t\t\t\tsetDesktopNotifications(prevState => {\n\t\t\t\t\tconst notfiticationIndex = prevState.findIndex(\n\t\t\t\t\t\tn => n.tag === String(data.ticketId)\n\t\t\t\t\t);\n\t\t\t\t\tif (notfiticationIndex !== -1) {\n\t\t\t\t\t\tprevState[notfiticationIndex].close();\n\t\t\t\t\t\tprevState.splice(notfiticationIndex, 1);\n\t\t\t\t\t\treturn [...prevState];\n\t\t\t\t\t}\n\t\t\t\t\treturn prevState;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on(`company-${user.companyId}-appMessage`, data => {\n\t\t\tif (\n\t\t\t\tdata.action === \"create\" && !data.message.fromMe && \n\t\t\t\t(data.ticket.status !== \"pending\" ) &&\n\t\t\t\t(!data.message.read || data.ticket.status === \"pending\") &&\n\t\t\t\t(data.ticket.userId === user?.id || !data.ticket.userId) &&\n\t\t\t\t(user?.queues?.some(queue => (queue.id === data.ticket.queueId)) || !data.ticket.queueId)\n\t\t\t) {\n\t\t\t\tsetNotifications(prevState => {\n\t\t\t\t\tconst ticketIndex = prevState.findIndex(t => t.id === data.ticket.id);\n\t\t\t\t\tif (ticketIndex !== -1) {\n\t\t\t\t\t\tprevState[ticketIndex] = data.ticket;\n\t\t\t\t\t\treturn [...prevState];\n\t\t\t\t\t}\n\t\t\t\t\treturn [data.ticket, ...prevState];\n\t\t\t\t});\n\n\t\t\t\tconst shouldNotNotificate =\n\t\t\t\t\t(data.message.ticketId === ticketIdRef.current &&\n\t\t\t\t\t\tdocument.visibilityState === \"visible\") ||\n\t\t\t\t\t(data.ticket.userId && data.ticket.userId !== user?.id) ||\n\t\t\t\t\tdata.ticket.isGroup;\n\n\t\t\t\tif (shouldNotNotificate) return;\n\n\t\t\t\thandleNotifications(data);\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t}, [user, showPendingTickets]);\n\n\tconst handleNotifications = data => {\n\t\tconst { message, contact, ticket } = data;\n\n\t\tconst options = {\n\t\t\tbody: `${message.body} - ${format(new Date(), \"HH:mm\")}`,\n\t\t\ticon: contact.urlPicture,\n\t\t\ttag: ticket.id,\n\t\t\trenotify: true,\n\t\t};\n\n\t\tconst notification = new Notification(\n\t\t\t`${i18n.t(\"tickets.notification.message\")} ${contact.name}`,\n\t\t\toptions\n\t\t);\n\n\t\tnotification.onclick = e => {\n\t\t\te.preventDefault();\n\t\t\twindow.focus();\n\t\t\thistoryRef.current.push(`/tickets/${ticket.uuid}`);\n\t\t\t// handleChangeTab(null, ticket.isGroup? \"group\" : \"open\");\n\t\t};\n\n\t\tsetDesktopNotifications(prevState => {\n\t\t\tconst notfiticationIndex = prevState.findIndex(\n\t\t\t\tn => n.tag === notification.tag\n\t\t\t);\n\t\t\tif (notfiticationIndex !== -1) {\n\t\t\t\tprevState[notfiticationIndex] = notification;\n\t\t\t\treturn [...prevState];\n\t\t\t}\n\t\t\treturn [notification, ...prevState];\n\t\t});\n\n\t\tsoundAlertRef.current();\n\t};\n\n\tconst handleClick = () => {\n\t\tsetIsOpen(prevState => !prevState);\n\t};\n\n\tconst handleClickAway = () => {\n\t\tsetIsOpen(false);\n\t};\n\n\tconst NotificationTicket = ({ children }) => {\n\t\treturn <div onClick={handleClickAway}>{children}</div>;\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<IconButton\n\t\t\t\tonClick={handleClick}\n\t\t\t\tref={anchorEl}\n\t\t\t\taria-label=\"Open Notifications\"\n\t\t\t\tcolor=\"inherit\"\n\t\t\t\tstyle={{color:\"white\"}}\n\t\t\t>\n\t\t\t\t<Badge overlap=\"rectangular\" badgeContent={notifications.length} color=\"secondary\">\n\t\t\t\t\t<ChatIcon />\n\t\t\t\t</Badge>\n\t\t\t</IconButton>\n\t\t\t<Popover\n\t\t\t\tdisableScrollLock\n\t\t\t\topen={isOpen}\n\t\t\t\tanchorEl={anchorEl.current}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\tclasses={{ paper: classes.popoverPaper }}\n\t\t\t\tonClose={handleClickAway}\n\t\t\t>\n\t\t\t\t<List dense className={classes.tabContainer}>\n\t\t\t\t\t{notifications.length === 0 ? (\n\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t<ListItemText>{i18n.t(\"notifications.noTickets\")}</ListItemText>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tnotifications.map(ticket => (\n\t\t\t\t\t\t\t<NotificationTicket key={ticket.id}>\n\t\t\t\t\t\t\t\t<TicketListItem ticket={ticket} />\n\t\t\t\t\t\t\t</NotificationTicket>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\t\t\t</Popover>\n\t\t</>\n\t);\n};\n\nexport default NotificationsPopOver;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}